{"inputShape":[-1,30],"outputShape":[-1,28],"content":"from keras.utils import to_categorical\r\nfrom pipeline import Pipeline, F\r\nfrom pipeline.pipes_df import Drop, Callback, ToXy\r\n\r\n\r\nclass ToKeras(F):\r\n    def __init__(self):\r\n        # assumes binary classification\r\n        super().__init__(lambda x: x.values, lambda x: (x[0].values, to_categorical(x[1], 2)))\r\n\r\n\r\ndef get_pipeline(y_column):\r\n    pipeline = Pipeline([\r\n        Drop(['V2', 'V3']),\r\n        # OneToOne('V4', StandardScaler()),  # standarize V4\r\n        Callback(lambda x: print(x['V4'].mean(), x['V4'].std())),\r\n        # we can print in the middle of the pipeline for debugging\r\n        ToXy(y_column),  # split the data in x,y (during fit)\r\n        ToKeras(),  # transform x to numpy, y to categorical matrix\r\n    ])\r\n    return pipeline\r\n","id":"pipeline-70f976a1"}